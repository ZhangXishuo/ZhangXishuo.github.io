<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[黑客智慧：另辟蹊径的域名]]></title>
      <url>/2017/08/07/hacker-wisdom-special-domain/</url>
      <content type="html"><![CDATA[<p>我们在浏览器地址栏输入网址，经过解析，向服务器发送请求，等待服务器返回数据，这个过程在常人看来平淡无奇，但在黑客眼中呢？</p>
<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>首先我们用火狐浏览器打开苹果公司的官方网站，<a href="https://www.apple.com/" target="_blank" rel="external">苹果官网</a></p>
<p><img src="http://ou3yips3l.bkt.clouddn.com/MY-BLOG/2017/8/Hacker/Firefox-1.png" alt=""></p>
<p>iPhone This is 7.与我们所期待的一致，这就是我们要访问的网页。</p>
<p>我们再打开一个链接，<a href="https://www.аррӏе.com/" target="_blank" rel="external">未知链接</a></p>
<p><img src="http://ou3yips3l.bkt.clouddn.com/MY-BLOG/2017/8/Hacker/Firefox-2.png" alt=""></p>
<p>注意看浏览器的地址栏，两个网址并无二致。</p>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>一个网址在全球范围内唯一，注册之后不能被重复注册，所以同一个网址是不可能指向两个不同的网页的。</p>
<p>所以我们得出结论，虽然这两个网址看上去相像，但是存在我们肉眼无法分辨的差异。</p>
<p>要解决这个问题，我们要了解的还很多，我们先来学习一下专业知识吧。</p>
<h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><p>DNS对于我们访问服务器非常重要，我们来了解一下DNS的概念，我们先看看维基百科的专业解释。</p>
<blockquote>
<p>网域名称系统（英文：Domain Name System，缩写：DNS）是互联网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。</p>
</blockquote>
<p>如果没有DNS，我们访问网站需要直接对该网站的服务器提交请求，也就是我们要记住每个要访问的服务器的地址，但貌似除了谷歌的8.8.8.8和国内知名的114.114.114.114这类好记的ip地址之外，相信其他的ip用户是记不住的。</p>
<h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>正因为ip地址不容易记忆，所以人们发明了容易记忆的域名，也就是我们经常能看到的www.google.com、www.baidu.com之类的。</p>
<p>这样，用户无需知道服务器ip，只要记住网站的域名即可。</p>
<p>当用户通过浏览器访问域名时，会将域名的请求发送到DNS服务器，服务器再在数据库中寻找与该域名对应的ip地址，然后反馈给浏览器。</p>
<p>浏览器通过得到的ip地址再向对应的服务器发起请求，从服务器获取网页文件，经过渲染，最后将多彩绚丽的网页呈现再用户面前。</p>
<h1 id="智慧"><a href="#智慧" class="headerlink" title="智慧"></a>智慧</h1><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p>上面的文字可能不好了解整个流程，我们画一个流程图理一下思路。</p>
<p><img src="http://ou3yips3l.bkt.clouddn.com/MY-BLOG/2017/8/Hacker/Process.png" alt=""></p>
<h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><p>理清了上网流程，假若我们是黑客，我们要怎么破坏用户上网呢？</p>
<p>最直观的，可以破坏那两个圆角矩形“DNS服务器”与“网站服务器”。但一般网站对服务器的防黑措施做的很好，所以以我们的水平攻击像百度、阿里、腾讯这样的服务器基本没戏。</p>
<p>没错，还剩下DNS服务器，这个攻破就比较容易了。</p>
<p>记得曾经有一个上午，全国的百度都上不去了，但是百度的工作人员发现公司的服务器是正常的。黑客攻破了DNS服务器，导致网站域名无法解析，所以用户自然无法访问百度，虽然网站服务器没有任何问题。</p>
<p>这么简单的东西，如果黑客用了这种攻击手法，那我们也没必要写一篇文章了。下面我们了解一点高端的。</p>
<h2 id="另辟蹊径"><a href="#另辟蹊径" class="headerlink" title="另辟蹊径"></a>另辟蹊径</h2><p>我们之前说的域名，相信大家理解的与常见的都是英文域名，www.google.com之类的。但是域名只支持中文吗？</p>
<blockquote>
<p>开始时，域名的字符仅限于ASCII字符的一个子集。2008年，ICANN通过一项决议，允许使用其它语言作为互联网顶级域名的字符。使用基于Punycode码的IDNA系统，可以将Unicode字符串映射为有效的DNS字符集。</p>
</blockquote>
<p>这里有一个我们不认识的概念，顶级域名。</p>
<blockquote>
<p>顶级域（或顶级域名；英语：Top-level Domain；英文缩写：TLD）是互联网DNS等级之中的最高级的域，它保存于DNS根域的名字空间中。</p>
</blockquote>
<p>比如www.google.com，“.com”就是一个顶级域名，代码商业机构，“google”是一级域名。</p>
<p>再比如我们的博客zhangxishuo.github.io，“io”表示英属印度洋领地的域名，“github”为一级域名，而我们用的就是github.io的子域名。</p>
<blockquote>
<p>互联网域名不仅支持ASCII字符，同时支持Unicode作为有效字符集。</p>
</blockquote>
<p>ASCII代表我们的域名仅仅可以使用表中支持的英文字符及特定字符，但若是Unicode呢？它就不仅仅只支持英文了，域名可以是“.中国”、“腾讯.cn”等，当然也可以是希腊字母、西里尔字母等。</p>
<p>我们对比一下ASCII表中的a与Unicode表中的a：</p>
<p><img src="http://ou3yips3l.bkt.clouddn.com/MY-BLOG/2017/8/Hacker/Hacker-a-1.png" alt=""></p>
<p><img src="http://ou3yips3l.bkt.clouddn.com/MY-BLOG/2017/8/Hacker/Hacker-a-2.png" alt=""></p>
<h2 id="Punycode"><a href="#Punycode" class="headerlink" title="Punycode"></a>Punycode</h2><p>经过上面的对比，相信大家已经明白了原因，域名支持多国语言，而好多语言中的字母与英文字母相像到无法分辨。</p>
<blockquote>
<p>Punycode（译为：域名代码）是一种表示Unicode码和ASCII码的有限的字符集。例如：“münchen”（德国慕尼黑）会被编码为“mnchen-3ya”。</p>
<p>Punycode的目的是在于国际化域名标签（IDNA）的框架中，使这些（多语言）的域名可以编码为ASCII。编码语法在文档RFC3492[1]中规定。</p>
</blockquote>
<p>浏览器会通过Punycode将用户输入的域名解析为DNS服务器能够识别的ASCII码，然后去向DNS服务器请求对应的服务器IP。</p>
<p>但是，火狐是默认不显示解析后的网址的，输入的是什么，显示的就是什么。还好这是一位技术大牛发现的，并在网址上写了一篇关于域名的博客，如果被黑客利用，制作一个足以以假乱真的网页，而域名相似到用户无法分辨，那不知会造成多少经济损失。</p>
]]></content>
      
        <categories>
            
            <category> 前沿科技 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 路由 </tag>
            
            <tag> DNS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Json学习笔记]]></title>
      <url>/2017/08/05/Json-Learn-Notes/</url>
      <content type="html"><![CDATA[<p>学习SpringMVC时，需要向后台发送Json格式的模拟数据进行测试，那Json到底是什么呢？我们为什么要用Json呢？一起来学习吧！</p>
<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="初识"><a href="#初识" class="headerlink" title="初识"></a>初识</h2><p>这并不是第一次接触Json，其实之前在学习微信小程序开发文档时就用到了Json。</p>
<p>小程序有一个app.json的文件，用于配置小程序的各种属性，所以最初错误地以为Json就是一种配置文件格式。直到今天再次遇到，我们一起来探究一下Json到底是什么？</p>
<h2 id="专业定义"><a href="#专业定义" class="headerlink" title="专业定义"></a>专业定义</h2><p>想探究Json到底是什么，自然要看一下专业的定义，我们先看看维基百科的解释。</p>
<blockquote>
<p>JSON（JavaScript Object Notation）是一种由道格拉斯·克罗克福特构想设计、轻量级的数据交换语言，以文字为基础，且易于让人阅读。尽管JSON是Javascript的一个子集，但JSON是独立于语言的文本格式，并且采用了类似于C语言家族的一些习惯。</p>
<p>JSON 数据格式与语言无关，脱胎于JavaScript，但目前很多编程语言都支持JSON格式数据的生成和解析。JSON的官方MIME类型是application/json，文件扩展名是.json。</p>
</blockquote>
<p>简单来说，Json就是一种起源于JavaScript且支持多种编程语言的一种数据交换语言。</p>
<h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><p><img src="http://ou3yips3l.bkt.clouddn.com/MY-BLOG/2017/8/Json/Json-Learn-Notes-Code-1.png" alt=""></p>
<p>左侧是名称，右侧是值。</p>
<p>Json的值可以是：数字、字符串、布尔类型、数组、对象、null。</p>
<h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><p>包含在一个花括号内，就是一个对象。</p>
<p><img src="http://ou3yips3l.bkt.clouddn.com/MY-BLOG/2017/8/Json/Json-Learn-Notes-Code-2.png" alt=""></p>
<p>这就是一个Json对象，我们可以借助菜鸟工具在线解析Json，<a href="https://c.runoob.com/front-end/53" target="_blank" rel="external">菜鸟工具</a></p>
<p><img src="http://ou3yips3l.bkt.clouddn.com/MY-BLOG/2017/8/Json/Json-Learn-Notes-Image-1.png" alt=""></p>
<p>Json数据被解析为一个含有四个属性的对象。</p>
<h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>Json数组包含在方括号内，一个数组中可以包含多个对象。</p>
<p><img src="http://ou3yips3l.bkt.clouddn.com/MY-BLOG/2017/8/Json/Json-Learn-Notes-Code-3.png" alt=""></p>
<p>这里students的值为一个数组，数组中包含的是两个对象，对象间用逗号隔开。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Json的语法其实很简单，总结为四句话：</p>
<ul>
<li>数据在键值对中</li>
<li>数据由逗号分隔</li>
<li>花括号保存对象</li>
<li>方括号保存数组</li>
</ul>
<h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><p>了解了Json，我们要引入另一个概念：序列化。</p>
<p>维基百科的官方概念：</p>
<blockquote>
<p>序列化（serialization）在计算机科学的资料处理中，是指将数据结构或物件状态转换成可取用格式（例如存成档案，存于缓冲，或经由网络中传送），以留待后续在相同或另一台计算机环境中，能恢复原先状态的过程。</p>
<p>依照序列化格式重新获取字节的结果时，可以利用它来产生与原始物件相同语义的副本。面向对象中的物件序列化，并不概括之前原始物件所关联的函式。这种过程也称为物件编组（marshalling）。</p>
</blockquote>
<p>通俗地解释一下序列化的概念：</p>
<p>需要进行跨平台时或对象存储时，因为网络只允许字符串或二进制格式，想要传输对象，就必须把对象序列化为xml(字符串)、json(字符串)、二进制(流)。</p>
<p>而另一台计算机可以通过反序列化将传过来的字符串或二进制格式转化为原来的对象，从而实现了在不同计算机间实现对象的传输。</p>
<h2 id="云计算"><a href="#云计算" class="headerlink" title="云计算"></a>云计算</h2><p>那在计算机间互相传输对象有什么用呢？没错，正如我们的二级标题所言：云计算！</p>
<blockquote>
<p>云计算，是一种基于互联网的计算方式，通过这种方式，共享的软硬件资源和信息可以按需求提供给计算机各种终端和其他设备。</p>
</blockquote>
<p>好吧，这个解释很难理解，我们贴出另一条易懂的定义。</p>
<blockquote>
<p>云计算是一种基于因特网的超级计算模式，在远程的数据中心里，成千上万台电脑和服务器连接成一片电脑云。因此，云计算甚至可以让你体验每秒10万亿次的运算能力，拥有这么强大的计算能力可以模拟核爆炸、预测气候变化和市场发展趋势。</p>
</blockquote>
<p>成千上万台服务器通过序列化与反序列化的方式实现对象传输，同时计算，从而实现了强大的运算能力！</p>
]]></content>
      
        <categories>
            
            <category> 学习总结 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Json </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
